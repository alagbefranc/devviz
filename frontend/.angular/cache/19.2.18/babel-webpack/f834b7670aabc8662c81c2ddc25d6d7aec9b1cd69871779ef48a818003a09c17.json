{"ast":null,"code":"var __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nlet DashboardComponent = (() => {\n  let _classDecorators = [Component({\n    selector: 'app-dashboard',\n    standalone: true,\n    imports: [CommonModule],\n    template: `\n    <div class=\"devviz-dashboard\">\n      <!-- Header -->\n      <header class=\"devviz-header\">\n        <div class=\"devviz-container\">\n          <div class=\"devviz-header-content\">\n            <div class=\"devviz-logo\">\n              <div class=\"devviz-logo-icon\">\n                <svg class=\"devviz-icon icon-tabler\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n              </div>\n              <div class=\"devviz-logo-text\">\n                <h1>DevViz</h1>\n                <span>AI Development Platform</span>\n              </div>\n            </div>\n\n            <nav class=\"devviz-nav\">\n              <button class=\"devviz-nav-item active\">\n                <svg class=\"devviz-icon icon-tabler\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n                </svg>\n                Dashboard\n              </button>\n              <button class=\"devviz-nav-item\">\n                <svg class=\"devviz-icon icon-tabler\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\" />\n                </svg>\n                Projects\n              </button>\n              <button class=\"devviz-nav-item\">\n                <svg class=\"devviz-icon icon-tabler\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                </svg>\n                Profile\n              </button>\n            </nav>\n\n            <button class=\"devviz-button devviz-button-primary\">\n              <svg class=\"devviz-icon icon-tabler\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\" />\n              </svg>\n              New Project\n            </button>\n          </div>\n        </div>\n      </header>\n\n      <!-- Main Content -->\n      <main class=\"devviz-main-content\">\n        <div class=\"devviz-container\">\n          <!-- Welcome Section -->\n          <section class=\"devviz-welcome\">\n            <div class=\"devviz-welcome-content\">\n              <h2>Welcome back, Developer! ðŸ‘‹</h2>\n              <p>Continue building amazing software with AI-powered visualization tools.</p>\n            </div>\n            <div class=\"devviz-welcome-stats\">\n              <div class=\"devviz-stat-card\">\n                <div class=\"devviz-stat-icon\">\n                  <svg class=\"devviz-icon icon-tabler\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>\n                <div class=\"devviz-stat-content\">\n                  <div class=\"devviz-stat-number\">12</div>\n                  <div class=\"devviz-stat-label\">Projects</div>\n                </div>\n              </div>\n\n              <div class=\"devviz-stat-card\">\n                <div class=\"devviz-stat-icon\">\n                  <svg class=\"devviz-icon icon-tabler\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                  </svg>\n                </div>\n                <div class=\"devviz-stat-content\">\n                  <div class=\"devviz-stat-number\">48</div>\n                  <div class=\"devviz-stat-label\">AI Generations</div>\n                </div>\n              </div>\n\n              <div class=\"devviz-stat-card\">\n                <div class=\"devviz-stat-icon\">\n                  <svg class=\"devviz-icon icon-tabler\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\n                  </svg>\n                </div>\n                <div class=\"devviz-stat-content\">\n                  <div class=\"devviz-stat-number\">6</div>\n                  <div class=\"devviz-stat-label\">Team Members</div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <!-- Quick Actions -->\n          <section class=\"devviz-quick-actions\">\n            <h3>Quick Actions</h3>\n            <div class=\"devviz-action-grid\">\n              <button class=\"devviz-action-card\" (click)=\"createGitWorkflow()\">\n                <div class=\"devviz-action-icon\">\n                  <svg class=\"devviz-icon-lg icon-tabler\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\" />\n                  </svg>\n                </div>\n                <div class=\"devviz-action-content\">\n                  <h4>Git Workflow</h4>\n                  <p>Design branching strategies and visualize commit history</p>\n                </div>\n                <div class=\"devviz-action-arrow\">\n                  <svg class=\"devviz-icon icon-tabler\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\" />\n                  </svg>\n                </div>\n              </button>\n\n              <button class=\"devviz-action-card\" (click)=\"createAPIDesign()\">\n                <div class=\"devviz-action-icon\">\n                  <svg class=\"devviz-icon-lg icon-tabler\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <div class=\"devviz-action-content\">\n                  <h4>API Designer</h4>\n                  <p>Create REST APIs with OpenAPI generation</p>\n                </div>\n                <div class=\"devviz-action-arrow\">\n                  <svg class=\"devviz-icon icon-tabler\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\" />\n                  </svg>\n                </div>\n              </button>\n\n              <button class=\"devviz-action-card\" (click)=\"createDatabaseSchema()\">\n                <div class=\"devviz-action-icon\">\n                  <svg class=\"devviz-icon-lg icon-tabler\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4\" />\n                  </svg>\n                </div>\n                <div class=\"devviz-action-content\">\n                  <h4>Database Schema</h4>\n                  <p>Visual database design with SQL generation</p>\n                </div>\n                <div class=\"devviz-action-arrow\">\n                  <svg class=\"devviz-icon icon-tabler\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\" />\n                  </svg>\n                </div>\n              </button>\n            </div>\n          </section>\n\n          <!-- Recent Projects -->\n          <section class=\"devviz-recent-projects\">\n            <div class=\"devviz-section-header\">\n              <h3>Recent Projects</h3>\n              <button class=\"devviz-button devviz-button-secondary\">View All</button>\n            </div>\n\n            <div class=\"devviz-project-grid\">\n              <div class=\"devviz-project-card\" *ngFor=\"let project of recentProjects\">\n                <div class=\"devviz-project-header\">\n                  <div class=\"devviz-project-icon\">\n                    <svg class=\"devviz-icon icon-tabler\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\" />\n                    </svg>\n                  </div>\n                  <div class=\"devviz-project-status active\">Active</div>\n                </div>\n\n                <div class=\"devviz-project-content\">\n                  <h4>{{ project.name }}</h4>\n                  <p>{{ project.description }}</p>\n\n                  <div class=\"devviz-project-stats\">\n                    <div class=\"devviz-project-stat\">\n                      <svg class=\"devviz-icon-sm icon-tabler\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                      </svg>\n                      {{ project.diagrams }} diagrams\n                    </div>\n                    <div class=\"devviz-project-stat\">\n                      <svg class=\"devviz-icon-sm icon-tabler\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      {{ project.lastUpdated }}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"devviz-project-footer\">\n                  <button class=\"devviz-button devviz-button-primary\">Open</button>\n                  <button class=\"devviz-button devviz-button-secondary\">Share</button>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  `,\n    styles: [`\n    .devviz-dashboard {\n      min-height: 100vh;\n      background: linear-gradient(135deg, var(--devviz-blue-50) 0%, var(--devviz-blue-100) 100%);\n    }\n\n    .devviz-header {\n      background: rgba(255, 255, 255, 0.95);\n      backdrop-filter: blur(10px);\n      border-bottom: 1px solid var(--devviz-gray-200);\n      position: sticky;\n      top: 0;\n      z-index: 100;\n    }\n\n    .devviz-header-content {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: var(--devviz-space-4) 0;\n      gap: var(--devviz-space-6);\n    }\n\n    .devviz-logo {\n      display: flex;\n      align-items: center;\n      gap: var(--devviz-space-3);\n    }\n\n    .devviz-logo-icon {\n      width: 3rem;\n      height: 3rem;\n      background: linear-gradient(135deg, var(--devviz-blue-400) 0%, var(--devviz-blue-600) 100%);\n      border-radius: var(--devviz-radius-lg);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: white;\n    }\n\n    .devviz-logo-text h1 {\n      font-size: 1.5rem;\n      font-weight: 700;\n      color: var(--devviz-gray-900);\n      margin: 0;\n    }\n\n    .devviz-logo-text span {\n      font-size: 0.875rem;\n      color: var(--devviz-gray-600);\n    }\n\n    .devviz-nav {\n      display: flex;\n      gap: var(--devviz-space-1);\n    }\n\n    .devviz-nav-item {\n      display: flex;\n      align-items: center;\n      gap: var(--devviz-space-2);\n      padding: var(--devviz-space-3) var(--devviz-space-4);\n      border-radius: var(--devviz-radius-lg);\n      border: 1px solid transparent;\n      background: transparent;\n      color: var(--devviz-gray-600);\n      font-weight: 500;\n      cursor: pointer;\n      transition: all var(--devviz-transition-fast);\n    }\n\n    .devviz-nav-item:hover {\n      background: var(--devviz-blue-50);\n      color: var(--devviz-blue-700);\n    }\n\n    .devviz-nav-item.active {\n      background: var(--devviz-blue-100);\n      color: var(--devviz-blue-700);\n    }\n\n    .devviz-main-content {\n      padding: var(--devviz-space-8) 0;\n    }\n\n    .devviz-welcome {\n      margin-bottom: var(--devviz-space-8);\n    }\n\n    .devviz-welcome-content h2 {\n      font-size: 2rem;\n      font-weight: 700;\n      color: var(--devviz-gray-900);\n      margin-bottom: var(--devviz-space-2);\n    }\n\n    .devviz-welcome-content p {\n      font-size: 1.125rem;\n      color: var(--devviz-gray-600);\n    }\n\n    .devviz-welcome-stats {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: var(--devviz-space-4);\n      margin-top: var(--devviz-space-6);\n    }\n\n    .devviz-stat-card {\n      background: white;\n      padding: var(--devviz-space-6);\n      border-radius: var(--devviz-radius-xl);\n      box-shadow: var(--devviz-shadow-sm);\n      border: 1px solid var(--devviz-gray-200);\n      display: flex;\n      align-items: center;\n      gap: var(--devviz-space-4);\n    }\n\n    .devviz-stat-icon {\n      width: 3rem;\n      height: 3rem;\n      background: var(--devviz-blue-50);\n      border-radius: var(--devviz-radius-lg);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: var(--devviz-blue-600);\n    }\n\n    .devviz-stat-number {\n      font-size: 1.5rem;\n      font-weight: 700;\n      color: var(--devviz-gray-900);\n    }\n\n    .devviz-stat-label {\n      font-size: 0.875rem;\n      color: var(--devviz-gray-600);\n    }\n\n    .devviz-quick-actions {\n      margin-bottom: var(--devviz-space-8);\n    }\n\n    .devviz-quick-actions h3 {\n      font-size: 1.5rem;\n      font-weight: 600;\n      color: var(--devviz-gray-900);\n      margin-bottom: var(--devviz-space-4);\n    }\n\n    .devviz-action-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n      gap: var(--devviz-space-4);\n    }\n\n    .devviz-action-card {\n      background: white;\n      padding: var(--devviz-space-6);\n      border-radius: var(--devviz-radius-xl);\n      box-shadow: var(--devviz-shadow-sm);\n      border: 1px solid var(--devviz-gray-200);\n      display: flex;\n      align-items: flex-start;\n      gap: var(--devviz-space-4);\n      cursor: pointer;\n      transition: all var(--devviz-transition-normal);\n      text-align: left;\n      width: 100%;\n    }\n\n    .devviz-action-card:hover {\n      box-shadow: var(--devviz-shadow-lg);\n      transform: translateY(-2px);\n    }\n\n    .devviz-action-icon {\n      width: 3rem;\n      height: 3rem;\n      background: linear-gradient(135deg, var(--devviz-blue-400) 0%, var(--devviz-blue-600) 100%);\n      border-radius: var(--devviz-radius-lg);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: white;\n      flex-shrink: 0;\n    }\n\n    .devviz-action-content {\n      flex: 1;\n    }\n\n    .devviz-action-content h4 {\n      font-size: 1.125rem;\n      font-weight: 600;\n      color: var(--devviz-gray-900);\n      margin-bottom: var(--devviz-space-1);\n    }\n\n    .devviz-action-content p {\n      font-size: 0.875rem;\n      color: var(--devviz-gray-600);\n      margin: 0;\n    }\n\n    .devviz-action-arrow {\n      display: flex;\n      align-items: center;\n      color: var(--devviz-gray-400);\n      flex-shrink: 0;\n    }\n\n    .devviz-recent-projects h3 {\n      font-size: 1.5rem;\n      font-weight: 600;\n      color: var(--devviz-gray-900);\n      margin-bottom: var(--devviz-space-4);\n    }\n\n    .devviz-section-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: var(--devviz-space-4);\n    }\n\n    .devviz-project-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n      gap: var(--devviz-space-4);\n    }\n\n    .devviz-project-card {\n      background: white;\n      border-radius: var(--devviz-radius-xl);\n      box-shadow: var(--devviz-shadow-sm);\n      border: 1px solid var(--devviz-gray-200);\n      overflow: hidden;\n      transition: all var(--devviz-transition-normal);\n    }\n\n    .devviz-project-card:hover {\n      box-shadow: var(--devviz-shadow-lg);\n      transform: translateY(-2px);\n    }\n\n    .devviz-project-header {\n      padding: var(--devviz-space-4) var(--devviz-space-6);\n      border-bottom: 1px solid var(--devviz-gray-200);\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .devviz-project-icon {\n      width: 2.5rem;\n      height: 2.5rem;\n      background: var(--devviz-blue-50);\n      border-radius: var(--devviz-radius-lg);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: var(--devviz-blue-600);\n    }\n\n    .devviz-project-status {\n      padding: var(--devviz-space-1) var(--devviz-space-3);\n      border-radius: var(--devviz-radius-md);\n      font-size: 0.75rem;\n      font-weight: 500;\n    }\n\n    .devviz-project-status.active {\n      background: var(--devviz-success);\n      color: white;\n    }\n\n    .devviz-project-content {\n      padding: var(--devviz-space-6);\n    }\n\n    .devviz-project-content h4 {\n      font-size: 1.125rem;\n      font-weight: 600;\n      color: var(--devviz-gray-900);\n      margin-bottom: var(--devviz-space-2);\n    }\n\n    .devviz-project-content p {\n      font-size: 0.875rem;\n      color: var(--devviz-gray-600);\n      margin-bottom: var(--devviz-space-4);\n    }\n\n    .devviz-project-stats {\n      display: flex;\n      gap: var(--devviz-space-4);\n      margin-bottom: var(--devviz-space-4);\n    }\n\n    .devviz-project-stat {\n      display: flex;\n      align-items: center;\n      gap: var(--devviz-space-1);\n      font-size: 0.875rem;\n      color: var(--devviz-gray-600);\n    }\n\n    .devviz-project-footer {\n      padding: var(--devviz-space-4) var(--devviz-space-6);\n      border-top: 1px solid var(--devviz-gray-200);\n      display: flex;\n      gap: var(--devviz-space-2);\n    }\n\n    @media (max-width: 768px) {\n      .devviz-header-content {\n        flex-direction: column;\n        align-items: stretch;\n        gap: var(--devviz-space-4);\n      }\n\n      .devviz-nav {\n        justify-content: center;\n      }\n\n      .devviz-welcome-stats {\n        grid-template-columns: 1fr;\n      }\n\n      .devviz-action-grid {\n        grid-template-columns: 1fr;\n      }\n\n      .devviz-project-grid {\n        grid-template-columns: 1fr;\n      }\n    }\n  `]\n  })];\n  let _classDescriptor;\n  let _classExtraInitializers = [];\n  let _classThis;\n  var DashboardComponent = class {\n    static {\n      _classThis = this;\n    }\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(null) : void 0;\n      __esDecorate(null, _classDescriptor = {\n        value: _classThis\n      }, _classDecorators, {\n        kind: \"class\",\n        name: _classThis.name,\n        metadata: _metadata\n      }, null, _classExtraInitializers);\n      DashboardComponent = _classThis = _classDescriptor.value;\n      if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n      __runInitializers(_classThis, _classExtraInitializers);\n    }\n    constructor(router) {\n      this.router = router;\n      this.recentProjects = [{\n        name: 'E-Commerce Platform',\n        description: 'Full-stack e-commerce solution with React and Node.js',\n        diagrams: 8,\n        lastUpdated: '2 hours ago',\n        status: 'active'\n      }, {\n        name: 'Mobile App API',\n        description: 'RESTful API for mobile application backend',\n        diagrams: 5,\n        lastUpdated: '1 day ago',\n        status: 'active'\n      }, {\n        name: 'Analytics Dashboard',\n        description: 'Data visualization and analytics platform',\n        diagrams: 12,\n        lastUpdated: '3 days ago',\n        status: 'active'\n      }];\n    }\n    ngOnInit() {}\n    createGitWorkflow() {\n      // Navigate to project creation with Git workflow mode\n      console.log('Creating Git workflow...');\n    }\n    createAPIDesign() {\n      // Navigate to project creation with API design mode\n      console.log('Creating API design...');\n    }\n    createDatabaseSchema() {\n      // Navigate to project creation with Database schema mode\n      console.log('Creating database schema...');\n    }\n  };\n  return DashboardComponent = _classThis;\n})();\nexport { DashboardComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}